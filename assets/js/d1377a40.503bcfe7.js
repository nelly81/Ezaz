"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[775],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(v,i(i({ref:t},p),{},{components:n})):r.createElement(v,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5637:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4},i="Events",c={unversionedId:"solana/provider-api/events",id:"solana/provider-api/events",title:"Events",description:"connect",source:"@site/docs/solana/provider-api/events.md",sourceDirName:"solana/provider-api",slug:"/solana/provider-api/events",permalink:"/solana/provider-api/events",draft:!1,editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/solana/provider-api/events.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"properties",permalink:"/solana/provider-api/properties"},next:{title:"Errors",permalink:"/solana/provider-api/errors"}},l={},s=[{value:"<code>connect</code>",id:"connect",level:2},{value:"<code>disconnect</code>",id:"disconnect",level:2},{value:"<code>accountChanged</code>",id:"accountchanged",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"events"},"Events"),(0,a.kt)("h2",{id:"connect"},(0,a.kt)("inlineCode",{parentName:"h2"},"connect")),(0,a.kt)("p",null,"The provider emits ",(0,a.kt)("inlineCode",{parentName:"p"},"connect")," with ",(0,a.kt)("a",{parentName:"p",href:"https://solana-labs.github.io/solana-web3.js/classes/PublicKey.html"},"solanaWeb3.PublicKey"),"\nwhen ",(0,a.kt)("inlineCode",{parentName:"p"},"solana.connect")," succeeds."),(0,a.kt)("h2",{id:"disconnect"},(0,a.kt)("inlineCode",{parentName:"h2"},"disconnect")),(0,a.kt)("p",null,"The provider emits ",(0,a.kt)("inlineCode",{parentName:"p"},"disconnect")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," when ",(0,a.kt)("inlineCode",{parentName:"p"},"solana.disconnect")," is\ncalled."),(0,a.kt)("h2",{id:"accountchanged"},(0,a.kt)("inlineCode",{parentName:"h2"},"accountChanged")),(0,a.kt)("p",null,"The provider emits ",(0,a.kt)("inlineCode",{parentName:"p"},"accountChanged")," when selected account changed."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"If selected account is connected,\n",(0,a.kt)("a",{parentName:"li",href:"https://solana-labs.github.io/solana-web3.js/classes/PublicKey.html"},"solanaWeb3.PublicKey"),"\nwill be emitted."),(0,a.kt)("li",{parentName:"ol"},"If selected account is deleted or disconnected, ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," will be emitted.")))}d.isMDXComponent=!0}}]);