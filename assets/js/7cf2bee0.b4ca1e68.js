"use strict";(self.webpackChunkbrave_wallet_docs=self.webpackChunkbrave_wallet_docs||[]).push([[38],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),b=a,v=u["".concat(p,".").concat(b)]||u[b]||d[b]||o;return r?n.createElement(v,i(i({ref:t},c),{},{components:r})):n.createElement(v,i({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5796:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:3},i=void 0,l={unversionedId:"solana/provider-api/properties",id:"solana/provider-api/properties",title:"properties",description:"Compatibility",source:"@site/docs/solana/provider-api/properties.md",sourceDirName:"solana/provider-api",slug:"/solana/provider-api/properties",permalink:"/solana/provider-api/properties",draft:!1,editUrl:"https://github.com/brave/brave-wallet-docs/edit/main/docs/solana/provider-api/properties.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/solana/provider-api/methods"},next:{title:"Events",permalink:"/solana/provider-api/events"}},p={},s=[{value:"Compatibility",id:"compatibility",level:2},{value:"<code>braveSolana.publicKey</code>",id:"bravesolanapublickey",level:2},{value:"<code>braveSolana.isConnected</code>",id:"bravesolanaisconnected",level:2}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"#Properties"),(0,a.kt)("h2",{id:"compatibility"},"Compatibility"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"window.solana")," is an alias of ",(0,a.kt)("inlineCode",{parentName:"p"},"window.braveSolana")," which should be used mainly."),(0,a.kt)("h2",{id:"bravesolanapublickey"},(0,a.kt)("inlineCode",{parentName:"h2"},"braveSolana.publicKey")),(0,a.kt)("p",null,"It will return ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," when wallet is not connected, otherwise ",(0,a.kt)("a",{parentName:"p",href:"https://solana-labs.github.io/solana-web3.js/classes/PublicKey.html"},"solanaWeb3.PublicKey"),"\nof selected account will be returned."),(0,a.kt)("h2",{id:"bravesolanaisconnected"},(0,a.kt)("inlineCode",{parentName:"h2"},"braveSolana.isConnected")),(0,a.kt)("p",null,"It will return ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," when current page is connected, ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," otherwise. Note\nthat same site on different tabs have different connected state."))}d.isMDXComponent=!0}}]);